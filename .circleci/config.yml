# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
    win: circleci/windows@5.0

# Note: filters act like an OR, not an AND

# Filters for tags of versions
tag-filter: &tag-filter
    tags:
        only:
            - /^v.*/

executors:
    # Only used for publishing
    linux-docker:
        docker:
            - image: rust:latest

    linux:
        machine:
            image: ubuntu-2204:current
    macos:
        macos:
            xcode: 15.4.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
    test:
        parameters:
            platform:
                type: executor
                default: "linux"
        executor: << parameters.platform >>

        steps:
            - checkout
            - restore_cache:
                  keys: cargo-jundler-{{ arch }}-{{ checksum "Cargo.toml" }}
            - run: curl -o rustup https://sh.rustup.rs
            - run: bash rustup -y
            - run: rm ~/.gitconfig
            - run: ~/.cargo/bin/cargo test --bin jundler
            - save_cache:
                  key: cargo-jundler-{{ arch }}-{{ checksum "Cargo.toml" }}
                  paths:
                      - ~/.cargo

    publish:
        executor: linux-docker

        steps:
            - checkout
            - restore_cache:
                  key: cargo-jundler-{{ arch }}-{{ checksum "Cargo.toml" }}
            - run: cargo publish --token $CARGO_PUBLISH_TOKEN

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
    testing:
        jobs:
            - test:
                  name: test-on-<< matrix.platform >>
                  matrix:
                      parameters:
                          platform: ["linux", "macos", "win/default"]

    # Publish to crates.io on tags
    publishing:
        jobs:
            - publish:
                  context: cargo-publish
                  filters: *tag-filter
